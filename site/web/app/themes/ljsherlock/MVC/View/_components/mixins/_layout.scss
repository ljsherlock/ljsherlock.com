// Padding longhand version
@mixin padding-all($top: null, $right: null, $bottom: null, $left: null, $remain: null) {
  @if $top != null { padding-top: #{($top)}px } @else if $remain != null { padding-top: #{($remain)}px }
  @if $right != null { padding-right: #{($right)}px } @else if $remain != null { padding-right: #{($remain)}px }
  @if $bottom != null { padding-bottom: #{($bottom)}px } @else if $remain != null { padding-bottom: #{($remain)}px }
  @if $left != null { padding-left: #{($left)}px } @else if $remain != null { padding-left: #{($remain)}px }
}


@mixin vertical-gradient($alpha, $start : $pohutukawa, $stop: $utahCrimson) {
    background-color: ($start + $stop) / 2;
    background: -moz-linear-gradient(left,  rgba($start, $alpha) 0%, rgba($stop, $alpha) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(left,  rgba($start, $alpha) 0%,rgba($stop, $alpha) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to right,  rgba($start, $alpha) 0%,rgba($stop, $alpha) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$stop}',GradientType=1 ); /* IE6-9 */
}

// POSITIONAL PSEUDO

@mixin positional-pseudo($pseudo:'before', $top:initial, $right:initial, $bottom:initial, $left:initial) {
  &:#{$pseudo} {
      top:$top;
      right:$right;
      bottom: $bottom;
      left: $left;
      @extend %pseudo;
      @content;
  }
}

@mixin absolute($top:0, $right:0, $bottom:0, $left:0, $w: 100%, $h: 100%) {
  top:$top;
  right:$right;
  bottom: $bottom;
  left: $left;
  width: $w;
  height: $h;
  @content;
}

@mixin wrap-size( $device ) {
    $size: map_deep_get( $layout, wrap, $device, width );

    @if $size == 100%  {
        width: $size;
    } @else {
        width: #{ $size / 16 }em;
    }
};
