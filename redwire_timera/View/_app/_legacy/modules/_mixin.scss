/* SASS VARIABLES */

/* MEDIA QUERIES */

@mixin screen ($media) {

 @if $media == wide {
    @media only screen and (min-width: 450px) { @content; }
  }

  @else  if $media == tablet {
    @media only screen and (min-width: 610px) { @content; }
  }

  @else if $media == landscape {
    @media only screen and (min-width: 800px) { @content; }
  }

  @else if $media == desktop {
    @media only screen and (min-width: 1025px) { @content; }
  }

  @else if $media == large {
    @media only screen and (min-width: 1280px) { @content; }
  }
}


/* BOX SIZING */

%boxing {
-webkit-box-sizing: border-box;
-moz-box-sizing: border-box;
box-sizing: border-box;
}


@mixin grid {
    width: 100%;
    max-width: 1025px;
    margin:auto;
    -webkit-transition: width 2s;
    transition: width 2s;

    > * {
         @extend %boxing;
          padding: 40px 25px;
    }
}

/* BACKGROUND SIZE */

@mixin size($size) {
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;

}

/* ALIGN INLINE_BLOCKS */

@mixin align {

display: table;

    > * {
        display: table-cell;
        vertical-align: top;

    }

}

/* BORDER RADIUS */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

/* TRANSITION */

@mixin trans ($effect, $time) {
-webkit-transition: $effect $time;
transition: $effect $time;
}

@mixin overlay($color, $opacity) {
    position: absolute;
    width: 100%;
    height: 100%;
    content: '';
    top: 0;
    left: 0;
    background-color: $color;
    opacity:  $opacity;
}




@mixin list($color) {

    list-style-type: none;

    li {

    padding-bottom: 0;
    position: relative;
    margin-bottom: 12px;
    padding-left: 10px;

    &:before {
        content: '';
        display: inline-block;
        border-right: 2px solid $color;
        height: 100%;
        width: 1px;
        position: absolute;
        left: 0;
        top: 4px;
    }

    }

}

@mixin frame($color) {

    position: relative;

    &:after {
        content: '';
        position: absolute;
        top: 3px;
        left: 3px;
        right: 3px;
        bottom: 3px;
        border: 1px solid $color;
    }

}

@mixin outFrame($color) {

    &:after {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        border: 1px solid $color;
    }

}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform($val) {
  -webkit-transform: $val;
  -moz-transform: $val;
  -ms-transform: $val;
  transform: $val;
}
